{"version":3,"file":"static/js/893.237ceeb8.chunk.js","mappings":"kVAEaA,EAAWC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6FAOpBC,EAAUH,EAAAA,GAAAA,QAAcI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+BAIxBG,EAAOL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,6E,SC2D7B,EAhEa,WACX,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAwBL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAgBpB,IAdAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACG,OAAnBd,GAAa,GAAMY,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEEC,EAAAA,EAAAA,IAAWtB,GAAS,KAAD,EAAhCU,EAAIS,EAAAI,KACVZ,EAAQD,GAAMS,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEdM,QAAQC,IAAGP,EAAAK,IAAI,QAEK,OAFLL,EAAAC,KAAA,GAEfb,GAAa,GAAOY,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAEvB,kBAVc,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAWfjB,GACF,GAAG,CAACb,IACCU,EAIL,OACEqB,EAAAA,EAAAA,MAACnC,EAAO,CAAAoC,SAAA,CACL1B,GACC2B,EAAAA,EAAAA,KAAA,OAAAD,SAAK,gBAELC,EAAAA,EAAAA,KAACnC,EAAI,CAAAkC,SACFtB,EAAKwB,KAAI,SAAAC,GAA4C,IAAzCC,EAAED,EAAFC,GAAIC,EAAYF,EAAZE,aAAcC,EAAIH,EAAJG,KAAMC,EAASJ,EAATI,UAC7BC,EAAWH,EAhCZ,kCAiCUA,EACXI,EACJ,OACEV,EAAAA,EAAAA,MAACvC,EAAQ,CAAAwC,SAAA,EACPC,EAAAA,EAAAA,KAAA,OAAKS,IAAKF,EAAUG,IAAKL,EAAMM,MAAO,IAAKC,OAAQ,OACnDd,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAOM,MAERC,GACCR,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBACHD,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,IAAEO,SAGVR,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBACHC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,qBAdCI,EAoBnB,OAGF1B,EAAKoC,SACLb,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wEAIX,C,mMCpEAe,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAGCC,EAAiB,eAAAnC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAiC,EAAAC,EAAA,OAAAnC,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACR0B,EAAAA,EAAAA,IAAU,6BAADK,OAA8BJ,IAAO,KAAD,EAAxD,OAAwDE,EAAA/B,EAAAI,KAA5D4B,EAAID,EAAJC,KAAIhC,EAAAkC,OAAA,SACLF,EAAKG,SAAO,wBAAAnC,EAAAS,OAAA,GAAAX,EAAA,KACpB,kBAH6B,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAOjByB,EAAY,eAAApB,GAAApB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAwC,EAAMxD,GAAO,IAAAyD,EAAA,OAAAzC,IAAAA,MAAA,SAAA0C,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,cAAAqC,EAAArC,KAAA,EACrB0B,EAAAA,EAAAA,IACX,UAADK,OAAWpD,EAAO,aAAAoD,OAAYJ,IACjCW,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAM,uCAClB,IAAG,KAAD,EAJK,OAAHJ,EAAGC,EAAAnC,KAAAmC,EAAAL,OAAA,SAKFI,EAAIN,MAAI,wBAAAO,EAAA9B,OAAA,GAAA4B,EAAA,KAChB,gBAPwBM,GAAA,OAAA3B,EAAAN,MAAA,KAAAC,UAAA,KAWZR,EAAU,eAAAyC,GAAAhD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgD,EAAMhE,GAAO,IAAAiE,EAAAd,EAAA,OAAAnC,IAAAA,MAAA,SAAAkD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,cAAA6C,EAAA7C,KAAA,EACd0B,EAAAA,EAAAA,IAAU,UAADK,OACpBpD,EAAO,qBAAAoD,OAAoBJ,EAAG,oBACxC,KAAD,EAFW,OAEXiB,EAAAC,EAAA3C,KAFO4B,EAAIc,EAAJd,KAAIe,EAAAb,OAAA,SAILF,EAAKzC,MAAI,wBAAAwD,EAAAtC,OAAA,GAAAoC,EAAA,KACjB,gBANsBG,GAAA,OAAAJ,EAAAlC,MAAA,KAAAC,UAAA,KAUVsC,EAAU,eAAAC,GAAAtD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsD,EAAMtE,GAAO,IAAAuE,EAAApB,EAAA,OAAAnC,IAAAA,MAAA,SAAAwD,GAAA,cAAAA,EAAApD,KAAAoD,EAAAnD,MAAA,cAAAmD,EAAAnD,KAAA,EACd0B,EAAAA,EAAAA,IAAU,UAADK,OAAWpD,EAAO,qBAAAoD,OAAoBJ,IAAO,KAAD,EAAhE,OAAgEuB,EAAAC,EAAAjD,KAApE4B,EAAIoB,EAAJpB,KAAIqB,EAAAnB,OAAA,SACLF,EAAKG,SAAO,wBAAAkB,EAAA5C,OAAA,GAAA0C,EAAA,KACpB,gBAHsBG,GAAA,OAAAJ,EAAAxC,MAAA,KAAAC,UAAA,KAOV4C,EAAe,eAAAC,GAAA5D,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA4D,EAAMC,GAAK,IAAAC,EAAA3B,EAAA,OAAAnC,IAAAA,MAAA,SAAA+D,GAAA,cAAAA,EAAA3D,KAAA2D,EAAA1D,MAAA,cAAA0D,EAAA1D,KAAA,EACjB0B,EAAAA,EAAAA,IAAU,yBAADK,OACLJ,EAAG,WAAAI,OAAUyB,EAAK,+CAC3C,KAAD,EAFW,OAEXC,EAAAC,EAAAxD,KAFO4B,EAAI2B,EAAJ3B,KAAI4B,EAAA1B,OAAA,SAGLF,GAAI,wBAAA4B,EAAAnD,OAAA,GAAAgD,EAAA,KACZ,gBAL2BI,GAAA,OAAAL,EAAA9C,MAAA,KAAAC,UAAA,I","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: start;\n`;\n\nexport const Section = styled.section`\n  padding: 15px 10;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 15px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from 'services/api';\nimport blankImage from '../../images/blank_profile.png';\nimport { ListItem, Section, List } from './Cast.styled';\n\nconst IMAGEURL = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const cast = await getCredits(movieId);\n        setCast(cast);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <Section>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <List>\n          {cast.map(({ id, profile_path, name, character }) => {\n            const imageSRC = profile_path\n              ? IMAGEURL + profile_path\n              : blankImage;\n            return (\n              <ListItem key={id}>\n                <img src={imageSRC} alt={name} width={200} height={300} />\n                <div>\n                  <p>\n                    <span>{name}</span>\n                  </p>\n                  {character ? (\n                    <p>\n                      <b>Character:</b>\n                      <span> {character}</span>\n                    </p>\n                  ) : (\n                    <p>\n                      <b>Character:</b>\n                      <span> Unknown</span>\n                    </p>\n                  )}\n                </div>\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n      {!cast.length && (\n        <p>There is no information about the cast of this film yet. Sorry...</p>\n      )}\n    </Section>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'e0c732ac82726138cafb99c2ace843bf';\n\n//trending movies request\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return data.results;\n};\n\n// movie details request\n\nexport const getMovieById = async movieId => {\n  const res = await axios\n    .get(`/movie/${movieId}?api_key=${KEY}`)\n    .catch(error => {\n      throw new Error('Oops... seems like an error occured.');\n    });\n  return res.data;\n};\n\n//cast info request\n\nexport const getCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\n\n//reviews request\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return data.results;\n};\n\n// search movies request\n\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n"],"names":["ListItem","styled","_templateObject","_taggedTemplateLiteral","Section","_templateObject2","List","_templateObject3","movieId","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","cast","setCast","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_cast","_context","prev","next","getCredits","sent","t0","console","log","finish","stop","apply","arguments","_jsxs","children","_jsx","map","_ref2","id","profile_path","name","character","imageSRC","blankImage","src","alt","width","height","length","axios","KEY","getTrendingMovies","_yield$axios$get","data","concat","abrupt","results","getMovieById","_callee2","res","_context2","catch","error","Error","_x","_ref3","_callee3","_yield$axios$get2","_context3","_x2","getReviews","_ref4","_callee4","_yield$axios$get3","_context4","_x3","getMoviesByName","_ref5","_callee5","query","_yield$axios$get4","_context5","_x4"],"sourceRoot":""}